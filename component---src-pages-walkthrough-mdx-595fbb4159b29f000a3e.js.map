{"version":3,"sources":["webpack:///./src/pages/walkthrough.mdx"],"names":["query","_frontmatter","layoutProps","MDXContent","components","props","mdxType","title","dangerouslySetInnerHTML","__html","data","landscape","value","soundSystem","amplifier","model","to","isMDXComponent"],"mappings":"+UASO,IAAMA,EAAQ,aAgBRC,EAAe,CAC1B,MAAS,cACT,aAAgB,GAQZC,EAAc,CAClBF,QACAC,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,YAAC,IAAD,CAAQA,QAAQ,UACd,YAAC,IAAD,CAAKC,MAAM,cAAcD,QAAQ,QACjC,qCACA,oKAEA,mBAAKE,wBAAyB,CAC5BC,OAAQJ,EAAMK,KAAKC,UAAUC,SAE/B,gIACA,mBAAKJ,wBAAyB,CAC5BC,OAAQJ,EAAMK,KAAKG,YAAYD,SAEjC,+DACA,mBAAKJ,wBAAyB,CAC5BC,OAAQJ,EAAMK,KAAKI,UAAUF,SAE/B,6OAGA,8GACA,uBAAK,mBAAKJ,wBAAyB,CAC/BC,OAAQJ,EAAMK,KAAKK,MAAMH,UAE7B,YAAC,OAAD,CAAMI,GAAG,iBAAiBV,QAAQ,QAAlC,kBAMNH,EAAWc,gBAAiB","file":"component---src-pages-walkthrough-mdx-595fbb4159b29f000a3e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nexport const query = graphql`\nquery {\n  model: archieModel(name: {eq: \"sound-system\"}) {\n    value\n  }\n  landscape: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: null}}) {\n    value\n  }\n  soundSystem: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: \"sound-system\"}}) {\n    value\n  }\n  amplifier: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: \"sound-system/amplifier\"}}) {\n    value\n  }\n}\n`;\nexport const _frontmatter = {\n  \"title\": \"Walkthrough\",\n  \"menuPosition\": 2\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Layout mdxType=\"Layout\">\n      <SEO title=\"Walkthrough\" mdxType=\"SEO\" />\n      <h1>{`Walkthrough`}</h1>\n      <p>{`Lets say we're designing a snazzy new home audio system.\nWe might start off by picturing it in the home, and the systems it might talk to:`}</p>\n      <div dangerouslySetInnerHTML={{\n        __html: props.data.landscape.value\n      }} />\n      <p>{`Happy in the knowledge that we know what our system will talk to, we open it up and define the innards:`}</p>\n      <div dangerouslySetInnerHTML={{\n        __html: props.data.soundSystem.value\n      }} />\n      <p>{`Now what's going on in that amplifier?`}</p>\n      <div dangerouslySetInnerHTML={{\n        __html: props.data.amplifier.value\n      }} />\n      <p>{`Notice how there is no connection between 'speaker' and 'user'?\nThe amplifier doesn't care about that, it just cares about its inputs and outputs,\nso that is removed from the diagram. Don't try to say too much!`}</p>\n      <p>{`All of those diagrams, and more, are enabled by the existence of a single model file:`}</p>\n      <pre><div dangerouslySetInnerHTML={{\n          __html: props.data.model.value\n        }} /></pre>\n      <Link to=\"/installation/\" mdxType=\"Link\">Installation</Link>\n    </Layout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}