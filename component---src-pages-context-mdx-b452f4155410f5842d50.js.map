{"version":3,"sources":["webpack:///./src/pages/context.mdx"],"names":["query","_frontmatter","layoutProps","MDXContent","components","props","mdxType","title","parentName","code","image","data","landscape","value","model","soundSystem","isMDXComponent"],"mappings":"uVAUO,IAAMA,EAAQ,aAgBRC,EAAe,CAC1B,MAAS,UACT,aAAgB,GAQZC,EAAc,CAClBF,QACAC,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAQA,QAAQ,UACd,YAAC,IAAD,CAAKC,MAAM,UAAUD,QAAQ,QAC7B,yCACA,qCACA,wSAGA,oCACA,mHAAkG,0BAAYE,WAAW,KAAvB,SAAlG,aACA,2CACA,sBACE,kBAAIA,WAAW,MAAf,6BACA,kBAAIA,WAAW,MAAf,kCAEF,mDACA,mLAEA,sDACA,wIAEA,sBACE,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,0BAEF,gDACA,yKAEA,YAAC,IAAD,CAASC,KAAK,2BAA2BC,MAAOL,EAAMM,KAAKC,UAAUC,MAAOC,MAAOT,EAAMM,KAAKG,MAAMD,MAAOP,QAAQ,YACnH,2CACA,2EAA0D,0BAAYE,WAAW,KAAvB,gBAA1D,yDACmB,0BAAYA,WAAW,KAAvB,aADnB,QACiF,0BAAYA,WAAW,KAAvB,WADjF,kBAEA,+GACA,YAAC,IAAD,CAASC,KAAK,gDAAgDC,MAAOL,EAAMM,KAAKI,YAAYF,MAAOC,MAAOT,EAAMM,KAAKG,MAAMD,MAAOP,QAAQ,cAMhJH,EAAWa,gBAAiB","file":"component---src-pages-context-mdx-b452f4155410f5842d50.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Example from \"../components/example\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nexport const query = graphql`\nquery {\n  model: archieModel(name: {eq: \"sound-system\"}) {\n    value\n  }\n  landscape: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: null}}) {\n    value\n  }\n  soundSystem: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: \"sound-system\"}}) {\n    value\n  }\n  amplifier: svgImage(args: {name: {eq: \"sound-system\"}, scope: {eq: \"sound-system/amplifier\"}}) {\n    value\n  }\n}\n`;\nexport const _frontmatter = {\n  \"title\": \"Context\",\n  \"menuPosition\": 4\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Layout mdxType=\"Layout\">\n      <SEO title=\"Context\" mdxType=\"SEO\" />\n      <h1>{`Context diagram`}</h1>\n      <h2>{`Description`}</h2>\n      <p>{`The context diagram is designed to break down components only where useful. We find this useful to\nget a 'top-down' functional impression of a system, with the option to generate diagrams that\nsuccessively 'open the lid' on components, whilst keeping others 'boxed up'.`}</p>\n      <h2>{`Definition`}</h2>\n      <p>{`A context diagram shows the context of the specified element, with respect to a particular `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` element.`}</p>\n      <p>{`The view contains:`}</p>\n      <ol>\n        <li parentName=\"ol\">{`Main elements of interest`}</li>\n        <li parentName=\"ol\">{`Relevant associated elements.`}</li>\n      </ol>\n      <h3>{`Main elements of interest`}</h3>\n      <p>{`The main elements of interest are those that are children of the scoping element.\nOr, if the scoping element has no children, the scoping element itself.`}</p>\n      <h3>{`Relevant associated elements`}</h3>\n      <p>{`A relevant associated element is one that is associated to one of the main elements of interest,\nwhere either:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Its immediate parent is an ancestor of the scope`}</li>\n        <li parentName=\"ul\">{`It is a root element.`}</li>\n      </ul>\n      <h2>{`Example: entire system`}</h2>\n      <p>{`The simplest 'context' is one with the scope of the entire system.\nAll the 'top level' elements have been added (children of the world scope!).`}</p>\n      <Example code=\"archie context model.yml\" image={props.data.landscape.value} model={props.data.model.value} mdxType=\"Example\" />\n      <h2>{`Example: sub-item`}</h2>\n      <p>{`If we change the scope to a sub-item, in this case `}<inlineCode parentName=\"p\">{`sound-system`}</inlineCode>{`, we see that it is opened up\nand it's two children, `}<inlineCode parentName=\"p\">{`amplifier`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`speaker`}</inlineCode>{` are revealed.`}</p>\n      <p>{`The only connections that are shown are those that connect directly to these children.`}</p>\n      <Example code=\"archie context model.yml --scope sound-system\" image={props.data.soundSystem.value} model={props.data.model.value} mdxType=\"Example\" />\n    </Layout>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}